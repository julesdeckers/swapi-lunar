import Head from 'next/head'
import Link from 'next/link';
import styled from 'styled-components';
import { useCharacterStore } from '@lib/stores/StarWarsStore';
import { useEffect, useState } from 'react';

import CharacterCard from '@components/general/CharacterCard';

const Container = styled.div`
width: 100vw;
height: calc(100vh - 10rem);
/* overflow: hidden; */
`;

const Layout = styled.div`
display: grid;
grid-template-columns: 20vw 1fr;
grid-template-areas: 
'sidebar main'
'sidebar main';
`;

const SideBar = styled.div`
position: fixed;
left: 0;
top: 10rem;
width: 20vw;
background-color: ${props => props.theme.colors.blue};
grid-area: sidebar;
height: calc(100vh - 10rem);
`;

const MainView = styled.div`
grid-area: main;
text-align: left;
margin-top: 10rem;
padding: 1rem;
display: grid;
grid-template-columns: 1fr 1fr 1fr 1fr;
gap: 1rem;
grid-auto-rows: 30rem;
overflow: scroll;
height: auto;
`;

export default function Home() {
  // const characterStore = useCharacterStore((state) => state.characters);
  // const characters = characterStore.characters;
  const [data, setData] = useState(null);
  const [chars, setChars] = useState(null);
  const [isLoading, setLoading] = useState(false);
  useEffect(() => {
    setLoading(true)
    fetch('https://swapi.dev/api/people')
      .then((res) => res.json())
      .then((data) => {
        setData(data.results)
        setLoading(false)
        // setChars(data.results);
        console.log(data);
      })
  }, [])
  return (
    <>
      <Head>
        <title>Swapi | LunarDev</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Layout>
          <SideBar>
            <p>Sidebar</p>
            <h1>Swapi</h1>
          </SideBar>
          {isLoading && <p>Loading...</p>}
          <MainView>
            {data &&
             data.map((char, index) => { return (<CharacterCard data={char} key={index} />)})
            }
          </MainView>
        </Layout>
      </Container>
    </>
  )
}